#!/usr/bin/env python
# -*- coding: utf-8 -*-
# @Time: 2023/4/26 10:36
# @Author: 白云苍狗
# @File: 04- 默认做浅复制.py
# @Software: PyCharm
"""
1- 复制列表(或多数内置的可变容器)最简单的方式是使用内置的类型构造函数。
2- 对列表和其他可变序列来说，还可以推荐简洁的l2 = l1[:]语句创建副本。
3- 构造函数或[:]做的是浅拷贝
    即复制最外层容器，副本中的项是源容器中项的引用。如果所有项都是不可变的，那么这种行为没有问题，而且还能节省内存。
"""
l1 = [3, [55, 44], (7, 8, 9)]
l2 = list(l1)
print(l2)  # [3, [55, 44], (7, 8, 9)]
print(l2 == l1)  # True
print(l2 is l1)  # False

print('_' * 50)

l1 = [3, [66, 55, 44], (7, 8, 9)]
l2 = list(l1)
l1.append(100)
l1[1].remove(55)
print('l1: ', l1)  # l1:  [3, [66, 44], (7, 8, 9), 100]
print('l2: ', l2)  # l2:  [3, [66, 44], (7, 8, 9)]
# 对可变对象来说，+=运算符就地修改列表。这次修改在l1[1]中也有体现，因为他是l2[1]的别名
l2[1] += [33, 22]
# 对于元组来说， += 运算符创建一个新元组，然后重新绑定给l2[2]。
# 等同于l2[2] = l2[2] + (10, 11)，现在l1和l2中最后位置上的元组不是同一个对象。
l2[2] += (10, 11)
print('l1: ', l1)  # l1:  [3, [66, 44, 33, 22], (7, 8, 9), 100]
print('l2: ', l2)  # l2:  [3, [66, 44, 33, 22], (7, 8, 9, 10, 11)]
