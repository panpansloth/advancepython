1. Python中不可变容器序列类型也不能保证万无一失。即便是“不可变的”元组，如果存有可变的项，例如列表或者用户定义的对象，则其值也是可变的。
2. 把元组当作不可变列表使用时请记住，仅当元组中的所有项也都是不可变对象时，才能保证元组值是固定的。在元组上调用hash(t)
   函数可
1. Python中不可变容器序列类型也不能保证万无一失。即便是“不可变的”元组，如果存有可变的项，例如列表或者用户定义的对象，则其值也是可变的。
2. 把元组当作不可变列表使用时请记住，仅当元组中的所有项也都是不可变对象时，才能保证元组值是固定的。在元组上调用hash(t)
   函数可以快速判断元组的值是否固定。如果t包含不可变的项，则hash(t)抛出异常TypeError。
1. Python中不可变容器序列类型也不能保证万无一失。即便是“不可变的”元组，如果存有可变的项，例如列表或者用户定义的对象，则其值也是可变的。
2. 把元组当作不可变列表使用时请记住，仅当元组中的所有项也都是不可变对象时，才能保证元组值是固定的。在元组上调用hash(t)
   函数可以快速判断元组的值是否固定。如果t包含不可变的项，则hash(t)抛出异常TypeError。
   以快速判断元组的值是否固定。如果t包含不可变的项，则hash(t)抛出异常TypeError。
1. Python中不可变容器序列类型也不能保证万无一失。即便是“不可变的”元组，如果存有可变的项，例如列表或者用户定义的对象，则其值也是可变的。
2. 把元组当作不可变列表使用时请记住，仅当元组中的所有项也都是不可变对象时，才能保证元组值是固定的。在元组上调用hash(t)
   函数可以快速判断元组的值是否固定。如果t包含不可变的项，则hash(t)抛出异常TypeError。